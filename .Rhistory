mycol <- c("EVTYPE", "FATALITIES", "INJURIES", "PROPDMG", "PROPDMGEXP", "CROPDMG",
"CROPDMGEXP")
mydata <- storm[mycol]
##Preparing the property damage data
# exploring the property exponent
unique(mydata$PROPDMGEXP)
# Sorting the property exponent data
mydata$PROPEXP[mydata$PROPDMGEXP == "K"] <- 1000
mydata$PROPEXP[mydata$PROPDMGEXP == "M"] <- 1e+06
mydata$PROPEXP[mydata$PROPDMGEXP == ""] <- 1
mydata$PROPEXP[mydata$PROPDMGEXP == "B"] <- 1e+09
mydata$PROPEXP[mydata$PROPDMGEXP == "m"] <- 1e+06
mydata$PROPEXP[mydata$PROPDMGEXP == "0"] <- 1
mydata$PROPEXP[mydata$PROPDMGEXP == "5"] <- 1e+05
mydata$PROPEXP[mydata$PROPDMGEXP == "6"] <- 1e+06
mydata$PROPEXP[mydata$PROPDMGEXP == "4"] <- 10000
mydata$PROPEXP[mydata$PROPDMGEXP == "2"] <- 100
mydata$PROPEXP[mydata$PROPDMGEXP == "3"] <- 1000
mydata$PROPEXP[mydata$PROPDMGEXP == "h"] <- 100
mydata$PROPEXP[mydata$PROPDMGEXP == "7"] <- 1e+07
mydata$PROPEXP[mydata$PROPDMGEXP == "H"] <- 100
mydata$PROPEXP[mydata$PROPDMGEXP == "1"] <- 10
mydata$PROPEXP[mydata$PROPDMGEXP == "8"] <- 1e+08
# give 0 to invalid exponent data, so they not count in
mydata$PROPEXP[mydata$PROPDMGEXP == "+"] <- 0
mydata$PROPEXP[mydata$PROPDMGEXP == "-"] <- 0
mydata$PROPEXP[mydata$PROPDMGEXP == "?"] <- 0
# compute the property damage value
mydata$PROPDMGVAL <- mydata$PROPDMG * mydata$PROPEXP
##Preparing the crop damage data
# exploring the crop exponent data
unique(mydata$CROPDMGEXP)
# Sorting the property exponent data
mydata$CROPEXP[mydata$CROPDMGEXP == "M"] <- 1e+06
mydata$CROPEXP[mydata$CROPDMGEXP == "K"] <- 1000
mydata$CROPEXP[mydata$CROPDMGEXP == "m"] <- 1e+06
mydata$CROPEXP[mydata$CROPDMGEXP == "B"] <- 1e+09
mydata$CROPEXP[mydata$CROPDMGEXP == "0"] <- 1
mydata$CROPEXP[mydata$CROPDMGEXP == "k"] <- 1000
mydata$CROPEXP[mydata$CROPDMGEXP == "2"] <- 100
mydata$CROPEXP[mydata$CROPDMGEXP == ""] <- 1
# give 0 to invalid exponent data, so they not count in
mydata$CROPEXP[mydata$CROPDMGEXP == "?"] <- 0
# compute the crop damage value
mydata$CROPDMGVAL <- mydata$CROPDMG * mydata$CROPEXP
##Aggregate the data by event
# aggregate the data by event
fatal <- aggregate(FATALITIES ~ EVTYPE, data = mydata, FUN = sum)
injury <- aggregate(INJURIES ~ EVTYPE, data = mydata, FUN = sum)
propdmg <- aggregate(PROPDMGVAL ~ EVTYPE, data = mydata, FUN = sum)
cropdmg <- aggregate(CROPDMGVAL ~ EVTYPE, data = mydata, FUN = sum)
##Results Analysis1 - Which types of events are nost harmful with respect to population health, across the US?
# get top10 event with highest fatalities
fatal10 <- fatal[order(-fatal$FATALITIES), ][1:10, ]
# get top10 event with highest injuries
injury10 <- injury[order(-injury$INJURIES), ][1:10, ]
par(mfrow = c(1, 2), mar = c(12, 4, 3, 2), mgp = c(3, 1, 0), cex = 0.8)
barplot(fatal10$FATALITIES, las = 3, names.arg = fatal10$EVTYPE, main = "Weather Events With The Top 10 Highest Fatalities",
ylab = "number of fatalities", col = "red")
barplot(injury10$INJURIES, las = 3, names.arg = injury10$EVTYPE, main = "Weather Events With the Top 10 Highest Injuries",
ylab = "number of injuries", col = "red")
##Results Analysis2-Which types of events have the greatest economic consequences across the US?
# get top 10 events with highest property damage
propdmg10 <- propdmg[order(-propdmg$PROPDMGVAL), ][1:10, ]
# get top 10 events with highest crop damage
cropdmg10 <- cropdmg[order(-cropdmg$CROPDMGVAL), ][1:10, ]
par(mfrow = c(1, 2), mar = c(12, 4, 3, 2), mgp = c(3, 1, 0), cex = 0.8)
barplot(propdmg10$PROPDMGVAL/(10^9), las = 3, names.arg = propdmg10$EVTYPE,
main = "Top 10 Events with Greatest Property Damages", ylab = "Cost of damages ($ billions)",
col = "red")
barplot(cropdmg10$CROPDMGVAL/(10^9), las = 3, names.arg = cropdmg10$EVTYPE,
main = "Top 10 Events With Greatest Crop Damages", ylab = "Cost of damages ($ billions)",
col = "red")
# download file from URL
if (!file.exists("c:/Users/cwatkin/Documents/R_Coursera Files/Reproducible Research/ReprodResearch Project 2/StormData.csv.bz2")) {
download.file("https://d396qusza40orc.cloudfront.net/repdata%2Fdata%2FStormData.csv.bz2",
"c:/Users/cwatkin/Documents/R_Coursera Files/Reproducible Research/ReprodResearch Project 2/stormData.csv.bz2")
"c:/Users/cwatkin/Documents/R_Coursera Files/Reproducible Research/ReprodResearch Project 2/stormData.csv.bz2")
"c:/Users/cwatkin/Documents/R_Coursera Files/Reproducible Research/ReprodResearch Project 2/stormData.csv.bz2")
##Loading the data
# download file from URL
if (!file.exists("c:/Users/cwatkin/Documents/R_Coursera Files/Reproducible Research/ReprodResearch Project 2/StormData.csv.bz2")) {
download.file("https://d396qusza40orc.cloudfront.net/repdata%2Fdata%2FStormData.csv.bz2",
"c:/Users/cwatkin/Documents/R_Coursera Files/Reproducible Research/ReprodResearch Project 2/stormData.csv.bz2")
}
# unzip file
if (!file.exists("c:/Users/cwatkin/Documents/R_Coursera Files/Reproducible Research/ReprodResearch Project 2/StormData.csv")) {
library(R.utils)
bunzip2("c:/Users/cwatkin/Documents/R_Coursera Files/Reproducible Research/ReprodResearch Project 2/StormData.csv.bz2",   "c:/Users/cwatkin/Documents/R_Coursera Files/Reproducible Research/ReprodResearch Project 2/StormData.csv", remove = FALSE)
}
# load data into R
storm <- read.csv("c:/Users/cwatkin/Documents/R_Coursera Files/Reproducible Research/ReprodResearch Project 2/StormData.csv")
head(storm)
##Exacting the data contain weather event, health and economic impact data
# exploring the data contents
head(storm)
# subset the data to health and economic impact analysis against weather
# event
mycol <- c("EVTYPE", "FATALITIES", "INJURIES", "PROPDMG", "PROPDMGEXP", "CROPDMG",
"CROPDMGEXP")
mydata <- storm[mycol]
##Preparing the property damage data
# exploring the property exponent
unique(mydata$PROPDMGEXP)
# Sorting the property exponent data
mydata$PROPEXP[mydata$PROPDMGEXP == "K"] <- 1000
mydata$PROPEXP[mydata$PROPDMGEXP == "M"] <- 1e+06
mydata$PROPEXP[mydata$PROPDMGEXP == ""] <- 1
mydata$PROPEXP[mydata$PROPDMGEXP == "B"] <- 1e+09
mydata$PROPEXP[mydata$PROPDMGEXP == "m"] <- 1e+06
mydata$PROPEXP[mydata$PROPDMGEXP == "0"] <- 1
mydata$PROPEXP[mydata$PROPDMGEXP == "5"] <- 1e+05
mydata$PROPEXP[mydata$PROPDMGEXP == "6"] <- 1e+06
mydata$PROPEXP[mydata$PROPDMGEXP == "4"] <- 10000
mydata$PROPEXP[mydata$PROPDMGEXP == "2"] <- 100
mydata$PROPEXP[mydata$PROPDMGEXP == "3"] <- 1000
mydata$PROPEXP[mydata$PROPDMGEXP == "h"] <- 100
mydata$PROPEXP[mydata$PROPDMGEXP == "7"] <- 1e+07
mydata$PROPEXP[mydata$PROPDMGEXP == "H"] <- 100
mydata$PROPEXP[mydata$PROPDMGEXP == "1"] <- 10
mydata$PROPEXP[mydata$PROPDMGEXP == "8"] <- 1e+08
# give 0 to invalid exponent data, so they not count in
mydata$PROPEXP[mydata$PROPDMGEXP == "+"] <- 0
mydata$PROPEXP[mydata$PROPDMGEXP == "-"] <- 0
mydata$PROPEXP[mydata$PROPDMGEXP == "?"] <- 0
# compute the property damage value
mydata$PROPDMGVAL <- mydata$PROPDMG * mydata$PROPEXP
##Preparing the crop damage data
# exploring the crop exponent data
unique(mydata$CROPDMGEXP)
# Sorting the property exponent data
mydata$CROPEXP[mydata$CROPDMGEXP == "M"] <- 1e+06
mydata$CROPEXP[mydata$CROPDMGEXP == "K"] <- 1000
mydata$CROPEXP[mydata$CROPDMGEXP == "m"] <- 1e+06
mydata$CROPEXP[mydata$CROPDMGEXP == "B"] <- 1e+09
mydata$CROPEXP[mydata$CROPDMGEXP == "0"] <- 1
mydata$CROPEXP[mydata$CROPDMGEXP == "k"] <- 1000
mydata$CROPEXP[mydata$CROPDMGEXP == "2"] <- 100
mydata$CROPEXP[mydata$CROPDMGEXP == ""] <- 1
# give 0 to invalid exponent data, so they not count in
mydata$CROPEXP[mydata$CROPDMGEXP == "?"] <- 0
# compute the crop damage value
mydata$CROPDMGVAL <- mydata$CROPDMG * mydata$CROPEXP
##Aggregate the data by event
# aggregate the data by event
fatal <- aggregate(FATALITIES ~ EVTYPE, data = mydata, FUN = sum)
injury <- aggregate(INJURIES ~ EVTYPE, data = mydata, FUN = sum)
propdmg <- aggregate(PROPDMGVAL ~ EVTYPE, data = mydata, FUN = sum)
cropdmg <- aggregate(CROPDMGVAL ~ EVTYPE, data = mydata, FUN = sum)
##Results Analysis1 - Which types of events are nost harmful with respect to population health, across the US?
# get top10 event with highest fatalities
fatal10 <- fatal[order(-fatal$FATALITIES), ][1:10, ]
# get top10 event with highest injuries
injury10 <- injury[order(-injury$INJURIES), ][1:10, ]
par(mfrow = c(1, 2), mar = c(12, 4, 3, 2), mgp = c(3, 1, 0), cex = 0.8)
barplot(fatal10$FATALITIES, las = 3, names.arg = fatal10$EVTYPE, main = "Weather Events With The Top 10 Highest Fatalities",
ylab = "number of fatalities", col = "red")
barplot(injury10$INJURIES, las = 3, names.arg = injury10$EVTYPE, main = "Weather Events With the Top 10 Highest Injuries",
ylab = "number of injuries", col = "red")
##Results Analysis2-Which types of events have the greatest economic consequences across the US?
# get top 10 events with highest property damage
propdmg10 <- propdmg[order(-propdmg$PROPDMGVAL), ][1:10, ]
# get top 10 events with highest crop damage
cropdmg10 <- cropdmg[order(-cropdmg$CROPDMGVAL), ][1:10, ]
par(mfrow = c(1, 2), mar = c(12, 4, 3, 2), mgp = c(3, 1, 0), cex = 0.8)
barplot(propdmg10$PROPDMGVAL/(10^9), las = 3, names.arg = propdmg10$EVTYPE,
main = "Top 10 Events with Greatest Property Damages", ylab = "Cost of damages ($ billions)",
col = "red")
barplot(cropdmg10$CROPDMGVAL/(10^9), las = 3, names.arg = cropdmg10$EVTYPE,
main = "Top 10 Events With Greatest Crop Damages", ylab = "Cost of damages ($ billions)",
col = "red")
##Loading the data
# download file from URL
if (!file.exists("c:/Users/cwatkin/Documents/R_Coursera Files/Reproducible Research/ReprodResearch Project 2/StormData.csv.bz2")) {
download.file("https://d396qusza40orc.cloudfront.net/repdata%2Fdata%2FStormData.csv.bz2",
"c:/Users/cwatkin/Documents/R_Coursera Files/Reproducible Research/ReprodResearch Project 2/stormData.csv.bz2")
}
# unzip file
if (!file.exists("c:/Users/cwatkin/Documents/R_Coursera Files/Reproducible Research/ReprodResearch Project 2/StormData.csv")) {
library(R.utils)
bunzip2("c:/Users/cwatkin/Documents/R_Coursera Files/Reproducible Research/ReprodResearch Project 2/StormData.csv.bz2",   "c:/Users/cwatkin/Documents/R_Coursera Files/Reproducible Research/ReprodResearch Project 2/StormData.csv", remove = FALSE)
}
# load data into R
storm <- read.csv("c:/Users/cwatkin/Documents/R_Coursera Files/Reproducible Research/ReprodResearch Project 2/StormData.csv")
head(storm)
##Exacting the data contain weather event, health and economic impact data
# exploring the data contents
head(storm)
# subset the data to health and economic impact analysis against weather
# event
mycol <- c("EVTYPE", "FATALITIES", "INJURIES", "PROPDMG", "PROPDMGEXP", "CROPDMG",
"CROPDMGEXP")
mydata <- storm[mycol]
##Preparing the property damage data
# exploring the property exponent
unique(mydata$PROPDMGEXP)
# Sorting the property exponent data
mydata$PROPEXP[mydata$PROPDMGEXP == "K"] <- 1000
mydata$PROPEXP[mydata$PROPDMGEXP == "M"] <- 1e+06
mydata$PROPEXP[mydata$PROPDMGEXP == ""] <- 1
mydata$PROPEXP[mydata$PROPDMGEXP == "B"] <- 1e+09
mydata$PROPEXP[mydata$PROPDMGEXP == "m"] <- 1e+06
mydata$PROPEXP[mydata$PROPDMGEXP == "0"] <- 1
mydata$PROPEXP[mydata$PROPDMGEXP == "5"] <- 1e+05
mydata$PROPEXP[mydata$PROPDMGEXP == "6"] <- 1e+06
mydata$PROPEXP[mydata$PROPDMGEXP == "4"] <- 10000
mydata$PROPEXP[mydata$PROPDMGEXP == "2"] <- 100
mydata$PROPEXP[mydata$PROPDMGEXP == "3"] <- 1000
mydata$PROPEXP[mydata$PROPDMGEXP == "h"] <- 100
mydata$PROPEXP[mydata$PROPDMGEXP == "7"] <- 1e+07
mydata$PROPEXP[mydata$PROPDMGEXP == "H"] <- 100
mydata$PROPEXP[mydata$PROPDMGEXP == "1"] <- 10
mydata$PROPEXP[mydata$PROPDMGEXP == "8"] <- 1e+08
# give 0 to invalid exponent data, so they not count in
mydata$PROPEXP[mydata$PROPDMGEXP == "+"] <- 0
mydata$PROPEXP[mydata$PROPDMGEXP == "-"] <- 0
mydata$PROPEXP[mydata$PROPDMGEXP == "?"] <- 0
# compute the property damage value
mydata$PROPDMGVAL <- mydata$PROPDMG * mydata$PROPEXP
##Preparing the crop damage data
# exploring the crop exponent data
unique(mydata$CROPDMGEXP)
# Sorting the property exponent data
mydata$CROPEXP[mydata$CROPDMGEXP == "M"] <- 1e+06
mydata$CROPEXP[mydata$CROPDMGEXP == "K"] <- 1000
mydata$CROPEXP[mydata$CROPDMGEXP == "m"] <- 1e+06
mydata$CROPEXP[mydata$CROPDMGEXP == "B"] <- 1e+09
mydata$CROPEXP[mydata$CROPDMGEXP == "0"] <- 1
mydata$CROPEXP[mydata$CROPDMGEXP == "k"] <- 1000
mydata$CROPEXP[mydata$CROPDMGEXP == "2"] <- 100
mydata$CROPEXP[mydata$CROPDMGEXP == ""] <- 1
# give 0 to invalid exponent data, so they not count in
mydata$CROPEXP[mydata$CROPDMGEXP == "?"] <- 0
# compute the crop damage value
mydata$CROPDMGVAL <- mydata$CROPDMG * mydata$CROPEXP
##Aggregate the data by event
# aggregate the data by event
fatal <- aggregate(FATALITIES ~ EVTYPE, data = mydata, FUN = sum)
injury <- aggregate(INJURIES ~ EVTYPE, data = mydata, FUN = sum)
propdmg <- aggregate(PROPDMGVAL ~ EVTYPE, data = mydata, FUN = sum)
cropdmg <- aggregate(CROPDMGVAL ~ EVTYPE, data = mydata, FUN = sum)
##Results Analysis1 - Which types of events are nost harmful with respect to population health, across the US?
# get top10 event with highest fatalities
fatal10 <- fatal[order(-fatal$FATALITIES), ][1:10, ]
# get top10 event with highest injuries
injury10 <- injury[order(-injury$INJURIES), ][1:10, ]
par(mfrow = c(1, 2), mar = c(12, 4, 3, 2), mgp = c(3, 1, 0), cex = 0.8)
barplot(fatal10$FATALITIES, las = 3, names.arg = fatal10$EVTYPE, main = "Weather Events With The Top 10 Highest Fatalities",
ylab = "number of fatalities", col = "red")
barplot(injury10$INJURIES, las = 3, names.arg = injury10$EVTYPE, main = "Weather Events With the Top 10 Highest Injuries",
ylab = "number of injuries", col = "red")
##Results Analysis2-Which types of events have the greatest economic consequences across the US?
# get top 10 events with highest property damage
propdmg10 <- propdmg[order(-propdmg$PROPDMGVAL), ][1:10, ]
# get top 10 events with highest crop damage
cropdmg10 <- cropdmg[order(-cropdmg$CROPDMGVAL), ][1:10, ]
par(mfrow = c(1, 2), mar = c(12, 4, 3, 2), mgp = c(3, 1, 0), cex = 0.8)
barplot(propdmg10$PROPDMGVAL/(10^9), las = 3, names.arg = propdmg10$EVTYPE,
main = "Top 10 Events with Greatest Property Damages", ylab = "Cost of damages ($ billions)",
col = "red")
barplot(cropdmg10$CROPDMGVAL/(10^9), las = 3, names.arg = cropdmg10$EVTYPE,
main = "Top 10 Events With Greatest Crop Damages", ylab = "Cost of damages ($ billions)",
col = "red")
install.packages("knitr")
install.packages("knitr")
---
title: "Reproducible Research Peer Assessment2"
author: "Casey645"
date: "December 27, 2015"
output: html_document
---
##Loading the data
# download file from URL
if (!file.exists("c:/Users/cwatkin/Documents/R_Coursera Files/Reproducible Research/ReprodResearch Project 2/StormData.csv.bz2")) {
download.file("https://d396qusza40orc.cloudfront.net/repdata%2Fdata%2FStormData.csv.bz2",
"c:/Users/cwatkin/Documents/R_Coursera Files/Reproducible Research/ReprodResearch Project 2/stormData.csv.bz2")
}
# unzip file
if (!file.exists("c:/Users/cwatkin/Documents/R_Coursera Files/Reproducible Research/ReprodResearch Project 2/StormData.csv")) {
library(R.utils)+     bunzip2("c:/Users/cwatkin/Documents/R_Coursera Files/Reproducible Research/ReprodResearch Project 2/StormData.csv.bz2",   "c:/Users/cwatkin/Documents/R_Coursera Files/Reproducible Research/ReprodResearch Project 2/StormData.csv", remove = FALSE)
}
# load data into R
storm <- read.csv("c:/Users/cwatkin/Documents/R_Coursera Files/Reproducible Research/ReprodResearch Project 2/StormData.csv")
head(storm)
##Exacting the data contain weather event, health and economic impact data
# exploring the data contents
head(storm)
# subset the data to health and economic impact analysis against weather
# event
mycol <- c("EVTYPE", "FATALITIES", "INJURIES", "PROPDMG", "PROPDMGEXP", "CROPDMG",
"CROPDMGEXP")
mydata <- storm[mycol]
##Preparing the property damage data
# exploring the property exponent
unique(mydata$PROPDMGEXP)
# Sorting the property exponent data
mydata$PROPEXP[mydata$PROPDMGEXP == "K"] <- 1000
mydata$PROPEXP[mydata$PROPDMGEXP == "M"] <- 1e+06
mydata$PROPEXP[mydata$PROPDMGEXP == ""] <- 1
mydata$PROPEXP[mydata$PROPDMGEXP == "B"] <- 1e+09
mydata$PROPEXP[mydata$PROPDMGEXP == "m"] <- 1e+06
mydata$PROPEXP[mydata$PROPDMGEXP == "0"] <- 1
mydata$PROPEXP[mydata$PROPDMGEXP == "5"] <- 1e+05
mydata$PROPEXP[mydata$PROPDMGEXP == "6"] <- 1e+06
mydata$PROPEXP[mydata$PROPDMGEXP == "4"] <- 10000
mydata$PROPEXP[mydata$PROPDMGEXP == "2"] <- 100
mydata$PROPEXP[mydata$PROPDMGEXP == "3"] <- 1000
mydata$PROPEXP[mydata$PROPDMGEXP == "h"] <- 100
mydata$PROPEXP[mydata$PROPDMGEXP == "7"] <- 1e+07
mydata$PROPEXP[mydata$PROPDMGEXP == "H"] <- 100
mydata$PROPEXP[mydata$PROPDMGEXP == "1"] <- 10
mydata$PROPEXP[mydata$PROPDMGEXP == "8"] <- 1e+08
# give 0 to invalid exponent data, so they not count in
mydata$PROPEXP[mydata$PROPDMGEXP == "+"] <- 0
mydata$PROPEXP[mydata$PROPDMGEXP == "-"] <- 0
mydata$PROPEXP[mydata$PROPDMGEXP == "?"] <- 0
# compute the property damage value
mydata$PROPDMGVAL <- mydata$PROPDMG * mydata$PROPEXP
##Preparing the crop damage data
# exploring the crop exponent data
unique(mydata$CROPDMGEXP)
# Sorting the property exponent data
mydata$CROPEXP[mydata$CROPDMGEXP == "M"] <- 1e+06
mydata$CROPEXP[mydata$CROPDMGEXP == "K"] <- 1000
mydata$CROPEXP[mydata$CROPDMGEXP == "m"] <- 1e+06
mydata$CROPEXP[mydata$CROPDMGEXP == "B"] <- 1e+09
mydata$CROPEXP[mydata$CROPDMGEXP == "0"] <- 1
mydata$CROPEXP[mydata$CROPDMGEXP == "k"] <- 1000
mydata$CROPEXP[mydata$CROPDMGEXP == "2"] <- 100
mydata$CROPEXP[mydata$CROPDMGEXP == ""] <- 1
# give 0 to invalid exponent data, so they not count in
mydata$CROPEXP[mydata$CROPDMGEXP == "?"] <- 0
# compute the crop damage value
mydata$CROPDMGVAL <- mydata$CROPDMG * mydata$CROPEXP
##Aggregate the data by event
# aggregate the data by event
fatal <- aggregate(FATALITIES ~ EVTYPE, data = mydata, FUN = sum)
injury <- aggregate(INJURIES ~ EVTYPE, data = mydata, FUN = sum)
propdmg <- aggregate(PROPDMGVAL ~ EVTYPE, data = mydata, FUN = sum)
cropdmg <- aggregate(CROPDMGVAL ~ EVTYPE, data = mydata, FUN = sum)
##Results Analysis1 - Which types of events are nost harmful with respect to population health, across the US?
# get top10 event with highest fatalities
fatal10 <- fatal[order(-fatal$FATALITIES), ][1:10, ]
# get top10 event with highest injuries
injury10 <- injury[order(-injury$INJURIES), ][1:10, ]
par(mfrow = c(1, 2), mar = c(12, 4, 3, 2), mgp = c(3, 1, 0), cex = 0.8)
barplot(fatal10$FATALITIES, las = 3, names.arg = fatal10$EVTYPE, main = "Weather Events With The Top 10 Highest Fatalities",
ylab = "number of fatalities", col = "red")
barplot(injury10$INJURIES, las = 3, names.arg = injury10$EVTYPE, main = "Weather Events With the Top 10 Highest Injuries",
ylab = "number of injuries", col = "red")
##Results Analysis2-Which types of events have the greatest economic consequences across the US?
# get top 10 events with highest property damage
propdmg10 <- propdmg[order(-propdmg$PROPDMGVAL), ][1:10, ]
# get top 10 events with highest crop damage
cropdmg10 <- cropdmg[order(-cropdmg$CROPDMGVAL), ][1:10, ]
par(mfrow = c(1, 2), mar = c(12, 4, 3, 2), mgp = c(3, 1, 0), cex = 0.8)
barplot(propdmg10$PROPDMGVAL/(10^9), las = 3, names.arg = propdmg10$EVTYPE,
main = "Top 10 Events with Greatest Property Damages", ylab = "Cost of damages ($ billions)",
col = "red")
barplot(cropdmg10$CROPDMGVAL/(10^9), las = 3, names.arg = cropdmg10$EVTYPE,
main = "Top 10 Events With Greatest Crop Damages", ylab = "Cost of damages ($ billions)",
col = "red")
mycol <- c("EVTYPE", "FATALITIES", "INJURIES", "PROPDMG", "PROPDMGEXP", "CROPDMG",
"CROPDMGEXP")
mydata <- storm[mycol]
col = "red")
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
setwd("~/R_Coursera Files/Reproducible Research/ReprodResearch Project 2")
##Loading the data
# download file from URL
```
if (!file.exists("c:/Users/cwatkin/Documents/R_Coursera Files/Reproducible Research/ReprodResearch Project 2/StormData.csv.bz2")) {
download.file("https://d396qusza40orc.cloudfront.net/repdata%2Fdata%2FStormData.csv.bz2",
"c:/Users/cwatkin/Documents/R_Coursera Files/Reproducible Research/ReprodResearch Project 2/stormData.csv.bz2")
}
# unzip file
if (!file.exists("c:/Users/cwatkin/Documents/R_Coursera Files/Reproducible Research/ReprodResearch Project 2/StormData.csv")) {
library(R.utils)
bunzip2("c:/Users/cwatkin/Documents/R_Coursera Files/Reproducible Research/ReprodResearch Project 2/StormData.csv.bz2",   "c:/Users/cwatkin/Documents/R_Coursera Files/Reproducible Research/ReprodResearch Project 2/StormData.csv", remove = FALSE)
}
# load data into R
storm <- read.csv("c:/Users/cwatkin/Documents/R_Coursera Files/Reproducible Research/ReprodResearch Project 2/StormData.csv")
head(storm)
```
##Exacting the data contain weather event, health and economic impact data
# exploring the data contents
```
head(storm)
# subset the data to health and economic impact analysis against weather
# event
mycol <- c("EVTYPE", "FATALITIES", "INJURIES", "PROPDMG", "PROPDMGEXP", "CROPDMG",
"CROPDMGEXP")
mydata <- storm[mycol]
```
##Preparing the property damage data
# exploring the property exponent
```
unique(mydata$PROPDMGEXP)
# Sorting the property exponent data
mydata$PROPEXP[mydata$PROPDMGEXP == "K"] <- 1000
mydata$PROPEXP[mydata$PROPDMGEXP == "M"] <- 1e+06
mydata$PROPEXP[mydata$PROPDMGEXP == ""] <- 1
mydata$PROPEXP[mydata$PROPDMGEXP == "B"] <- 1e+09
mydata$PROPEXP[mydata$PROPDMGEXP == "m"] <- 1e+06
mydata$PROPEXP[mydata$PROPDMGEXP == "0"] <- 1
mydata$PROPEXP[mydata$PROPDMGEXP == "5"] <- 1e+05
mydata$PROPEXP[mydata$PROPDMGEXP == "6"] <- 1e+06
mydata$PROPEXP[mydata$PROPDMGEXP == "4"] <- 10000
mydata$PROPEXP[mydata$PROPDMGEXP == "2"] <- 100
mydata$PROPEXP[mydata$PROPDMGEXP == "3"] <- 1000
mydata$PROPEXP[mydata$PROPDMGEXP == "h"] <- 100
mydata$PROPEXP[mydata$PROPDMGEXP == "7"] <- 1e+07
mydata$PROPEXP[mydata$PROPDMGEXP == "H"] <- 100
mydata$PROPEXP[mydata$PROPDMGEXP == "1"] <- 10
mydata$PROPEXP[mydata$PROPDMGEXP == "8"] <- 1e+08
# give 0 to invalid exponent data, so they not count in
mydata$PROPEXP[mydata$PROPDMGEXP == "+"] <- 0
mydata$PROPEXP[mydata$PROPDMGEXP == "-"] <- 0
mydata$PROPEXP[mydata$PROPDMGEXP == "?"] <- 0
# compute the property damage value
mydata$PROPDMGVAL <- mydata$PROPDMG * mydata$PROPEXP
```
##Preparing the crop damage data
# exploring the crop exponent data
```
unique(mydata$CROPDMGEXP)
# Sorting the property exponent data
mydata$CROPEXP[mydata$CROPDMGEXP == "M"] <- 1e+06
mydata$CROPEXP[mydata$CROPDMGEXP == "K"] <- 1000
mydata$CROPEXP[mydata$CROPDMGEXP == "m"] <- 1e+06
mydata$CROPEXP[mydata$CROPDMGEXP == "B"] <- 1e+09
mydata$CROPEXP[mydata$CROPDMGEXP == "0"] <- 1
mydata$CROPEXP[mydata$CROPDMGEXP == "k"] <- 1000
mydata$CROPEXP[mydata$CROPDMGEXP == "2"] <- 100
mydata$CROPEXP[mydata$CROPDMGEXP == ""] <- 1
# give 0 to invalid exponent data, so they not count in
mydata$CROPEXP[mydata$CROPDMGEXP == "?"] <- 0
# compute the crop damage value
mydata$CROPDMGVAL <- mydata$CROPDMG * mydata$CROPEXP
```
##Aggregate the data by event
# aggregate the data by event
```
fatal <- aggregate(FATALITIES ~ EVTYPE, data = mydata, FUN = sum)
injury <- aggregate(INJURIES ~ EVTYPE, data = mydata, FUN = sum)
propdmg <- aggregate(PROPDMGVAL ~ EVTYPE, data = mydata, FUN = sum)
cropdmg <- aggregate(CROPDMGVAL ~ EVTYPE, data = mydata, FUN = sum)
```
##Results Analysis1 - Which types of events are nost harmful with respect to population health, across the US?
# get top10 event with highest fatalities
```
fatal10 <- fatal[order(-fatal$FATALITIES), ][1:10, ]
# get top10 event with highest injuries
injury10 <- injury[order(-injury$INJURIES), ][1:10, ]
par(mfrow = c(1, 2), mar = c(12, 4, 3, 2), mgp = c(3, 1, 0), cex = 0.8)
barplot(fatal10$FATALITIES, las = 3, names.arg = fatal10$EVTYPE, main = "Weather Events With The Top 10 Highest Fatalities",
ylab = "number of fatalities", col = "red")
barplot(injury10$INJURIES, las = 3, names.arg = injury10$EVTYPE, main = "Weather Events With the Top 10 Highest Injuries",
ylab = "number of injuries", col = "red")
```
##Results Analysis2-Which types of events have the greatest economic consequences across the US?
# get top 10 events with highest property damage
```
propdmg10 <- propdmg[order(-propdmg$PROPDMGVAL), ][1:10, ]
# get top 10 events with highest crop damage
cropdmg10 <- cropdmg[order(-cropdmg$CROPDMGVAL), ][1:10, ]
par(mfrow = c(1, 2), mar = c(12, 4, 3, 2), mgp = c(3, 1, 0), cex = 0.8)
barplot(propdmg10$PROPDMGVAL/(10^9), las = 3, names.arg = propdmg10$EVTYPE,
main = "Top 10 Events with Greatest Property Damages", ylab = "Cost of damages ($ billions)",
col = "red")
barplot(cropdmg10$CROPDMGVAL/(10^9), las = 3, names.arg = cropdmg10$EVTYPE,
main = "Top 10 Events With Greatest Crop Damages", ylab = "Cost of damages ($ billions)",
col = "red")
```
source('~/.active-rstudio-document', echo=TRUE)
()
install.packages("swirl")
library("swirl")
rm(list=ls())
swirl()
Version: 1.0
RestoreWorkspace: Default
SaveWorkspace: Default
AlwaysSaveHistory: Default
EnableCodeIndexing: Yes
UseSpacesForTab: Yes
NumSpacesForTab: 2
Encoding: UTF-8
RnwWeave: Sweave
LaTeX: pdfLaTeX
Version: 1.0
RestoreWorkspace: Default
SaveWorkspace: Default
AlwaysSaveHistory: Default
EnableCodeIndexing: Yes
UseSpacesForTab: Yes
NumSpacesForTab: 2
Encoding: UTF-8
RnwWeave: Sweave
LaTeX: pdfLaTeX
Version: 1.0
RestoreWorkspace: Default
SaveWorkspace: Default
AlwaysSaveHistory: Default
EnableCodeIndexing: Yes
UseSpacesForTab: Yes
NumSpacesForTab: 2
Encoding: UTF-8
RnwWeave: Sweave
LaTeX: pdfLaTeX
